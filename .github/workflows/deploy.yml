name: Build and Deploy to GKE

on:
  push:
    branches: ["main"]

permissions:
  contents: read
  id-token: write

jobs:
  build-deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout source
        uses: actions/checkout@v4

      - id: auth
        name: Authenticate to Google Cloud
        uses: google-github-actions/auth@v2
        with:
          workload_identity_provider: projects/${{ secrets.GCP_PROJECT_ID }}/locations/global/workloadIdentityPools/github-pool-2/providers/github-provider
          service_account: ${{ secrets.GCP_SA_EMAIL }}

      - name: Set up gcloud SDK
        uses: google-github-actions/setup-gcloud@v2
        with:
          project_id: romance-retreat
          install_components: "gke-gcloud-auth-plugin"

      - name: Configure Docker
        run: gcloud auth configure-docker us-central1-docker.pkg.dev --quiet

      - name: Build and push Docker image
        run: |
          IMAGE="us-central1-docker.pkg.dev/romance-retreat/romance-retreat/romance-retreat-app:${GITHUB_SHA}"
          docker build -t "$IMAGE" .
          docker push "$IMAGE"
          echo "IMAGE=$IMAGE" >> $GITHUB_ENV

      - name: Deploy to GKE
        env:
          USE_GKE_GCLOUD_AUTH_PLUGIN: "True"
        run: |
          # Get credentials for the cluster
          gcloud container clusters get-credentials romance-retreat-cluster \
            --zone us-central1-a \
            --project romance-retreat

          # Update the image in Deployment (fallback to apply if not found)
          kubectl set image deployment/romance-retreat-app \
            romance-retreat-app=$IMAGE --namespace=default || kubectl apply -f k8s/deployment.yml

          # Apply Service
          kubectl apply -f k8s/service.yml
